global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	#option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

# add into backend section
frontend stats_frontend
 	bind *:80
 	bind *:443 ssl crt /etc/haproxy/haproxy.pem
	default_backend stats_backend

backend stats_backend
        # enable statistics reports
        stats enable
        # auth info for statistics site
        stats auth haproxy:man-sinh-lee@SECURITY
        # hide version of HAProxy
        stats hide-version
        # display HAProxy hostname
        stats show-node
        # refresh time
        stats refresh 60s
        # statistics reports URI
        stats uri /stats

frontend kubernetes-api
    bind *:6443
    mode tcp
    default_backend kubernetes-masters

backend kubernetes-masters
    mode tcp
    balance roundrobin
    server master101 master101.aidevops.dev:6443 check
    server master102 master102.aidevops.dev:6443 check
    server master103 master103.aidevops.dev:6443 check	

# Frontend configuration
frontend nginx-frontend
    bind *:8080
    default_backend nginx-backend

# Backend configuration
backend nginx-backend
    balance roundrobin
    option httpchk GET /index.html
    server master101 master101.aidevops.dev:30080 check
    server master102 master102.aidevops.dev:30080 check
    server master103 master103.aidevops.dev:30080 check

# Frontend configuration for etcd client requests
frontend etcd-client
    bind *:2379
    default_backend etcd-nodes

# Backend configuration for etcd nodes
backend etcd-nodes
    balance roundrobin
    server etcd101 master101.aidevops.dev:2379 check
    server etcd102 master102.aidevops.dev:2379 check
    server etcd103 master103.aidevops.dev:2379 check

# Frontend configuration for etcd peer communication
frontend etcd-peer
    bind *:2380
    default_backend etcd-peers

# Backend configuration for etcd peers
backend etcd-peers
    balance roundrobin
    server etcd101 master101.aidevops.dev:2380 check
    server etcd102 master102.aidevops.dev:2380 check
    server etcd103 master103.aidevops.dev:2380 check
    
# # Frontend configuration
# frontend prometheus_frontend
#     bind *:9090
#     default_backend prometheus_backend

# # Backend configuration
# backend prometheus_backend
#     balance roundrobin
#     server master101 master101.aidevops.dev:30090 check
#     server master102 master102.aidevops.dev:30090 check
#     server master103 master103.aidevops.dev:30090 check

# # Frontend configuration
# frontend grafana_frontend
#     bind *:3000
#     default_backend grafana_backend

# # Backend configuration
# backend grafana_backend
#     balance roundrobin
#     server master101 master101.aidevops.dev:30000 check
#     server master102 master102.aidevops.dev:30000 check
#     server master103 master103.aidevops.dev:30000 check

# frontend galera 
#     mode tcp
#     bind *:3306
#     default_backend galera_servers

# backend galera_servers
#     balance roundrobin
#     mode tcp
#     option tcpka  
#     server db101 db101.aidevops.dev:3306 check weight 1
#     server db102 db102.aidevops.dev:3306 check weight 1
#     server db103 db103.aidevops.dev:3306 check weight 1


# # Frontend configuration
# frontend php-redis-frontend
#     bind *:80
#     default_backend php-redis-backend

# # Backend configuration
# backend php-redis-backend
#     balance roundrobin
#     option httpchk GET /index.html
#     server master101 master101.aidevops.dev:31080 check
#     server master102 master102.aidevops.dev:31080 check
#     server master103 master103.aidevops.dev:31080 check

# # Wordpress frontend configuration
# frontend wordpress-frontend
#     bind *:8008
#     default_backend wordpress-backend

# # Backend configuration
# backend wordpress-backend
#     balance roundrobin
#     server master101 master101.aidevops.dev:30300 check
#     server master102 master102.aidevops.dev:30300 check
#     server master103 master103.aidevops.dev:30300 check

# # Hublle frontend configuration
# frontend hubble-frontend
#     bind *:9080
#     default_backend hubble-backend

# # Hublle backend configuration
# backend hubble-backend
#     balance roundrobin
#     server master101 master101.aidevops.dev:30980 check
#     server master102 master102.aidevops.dev:30980 check
#     server master103 master103.aidevops.dev:30980 check
